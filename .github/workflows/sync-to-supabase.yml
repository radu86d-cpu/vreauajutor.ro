name: Sync SQL to Supabase

on:
  push:
    branches: [ main ]
    paths:
      - 'supabase/migrations/**'
      - 'supabase/*.sql'
      - 'supabase/**/*.sql'
  workflow_dispatch:

concurrency:
  group: supabase-sync-${{ github.ref }}
  cancel-in-progress: true

jobs:
  push-migrations:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      # Setează aceste valori în Settings → Secrets and variables → Actions (ale repo-ului):
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_REF:  ${{ secrets.SUPABASE_PROJECT_REF }}
      SUPABASE_DB_PASSWORD:  ${{ secrets.SUPABASE_DB_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Link project
        run: |
          # Necesită SUPABASE_ACCESS_TOKEN, SUPABASE_PROJECT_REF, SUPABASE_DB_PASSWORD
          supabase link --project-ref "$SUPABASE_PROJECT_REF" --password "$SUPABASE_DB_PASSWORD"

      - name: Push migrations
        run: |
          # Va împinge toate migrările din supabase/migrations la proiectul legat
          supabase db push --linked

      - name: Run seed (optional)
        if: hashFiles('supabase/seed.sql') != ''
        run: |
          # Rulează seed-ul dacă există (poți șterge acest pas dacă nu folosești seed.sql)
          supabase db query < supabase/seed.sql